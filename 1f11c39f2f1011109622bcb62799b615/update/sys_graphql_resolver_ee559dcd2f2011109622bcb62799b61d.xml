<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_graphql_resolver">
    <sys_graphql_resolver action="INSERT_OR_UPDATE">
        <name>Get User</name>
        <schema display_value="University">c5488b172f5011109622bcb62799b6c3</schema>
        <script><![CDATA[(function process( /*ResolverEnvironment*/ env) {
	// By default try to get ID from the query arguments: getStudent(id: ID!)
	// If that is empty then try to use the value from the @source directive
	// in the schema definition.  This allows us to use the same resolver
	// from a query (getUser(id)) or from a nested field (getIncident/assignedTo)
    var userId = env.getArguments().id || env.getSource();

    var gr = new GlideRecordSecure('sys_user');
    gr.query('sys_id', userId);

    return gr;
})(env);]]></script>
        <sys_class_name>sys_graphql_resolver</sys_class_name>
        <sys_created_by>jon.lind</sys_created_by>
        <sys_created_on>2022-07-05 21:16:41</sys_created_on>
        <sys_id>ee559dcd2f2011109622bcb62799b61d</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>Get User</sys_name>
        <sys_package display_value="GraphQL Tutorial" source="x_530453_gqlt">1f11c39f2f1011109622bcb62799b615</sys_package>
        <sys_policy/>
        <sys_scope display_value="GraphQL Tutorial">1f11c39f2f1011109622bcb62799b615</sys_scope>
        <sys_update_name>sys_graphql_resolver_ee559dcd2f2011109622bcb62799b61d</sys_update_name>
        <sys_updated_by>jon.lind</sys_updated_by>
        <sys_updated_on>2022-07-18 22:27:16</sys_updated_on>
    </sys_graphql_resolver>
</record_update>
